# Redis Configuration for D&D Tracker Development Environment
# This configuration is optimized for development with Docker Compose

# =============================================================================
# Network and Security
# =============================================================================
# Bind to all interfaces (safe in Docker network)
bind 0.0.0.0

# Default port
port 6379

# Disable protected mode for Docker development
protected-mode no

# Connection timeout (0 = disabled)
timeout 0

# TCP keepalive
tcp-keepalive 300

# =============================================================================
# Memory and Persistence
# =============================================================================
# Save database to disk
# save <seconds> <changes>
save 900 1     # Save if at least 1 key changed in 900 seconds
save 300 10    # Save if at least 10 keys changed in 300 seconds  
save 60 10000  # Save if at least 10000 keys changed in 60 seconds

# Enable RDB compression
rdbcompression yes

# RDB file checksum
rdbchecksum yes

# RDB filename
dbfilename dump.rdb

# Working directory for RDB file
dir /data

# =============================================================================
# Logging
# =============================================================================
# Log level: debug, verbose, notice, warning
loglevel notice

# Log to stdout (captured by Docker)
logfile ""

# Enable syslog logging (disabled for Docker)
syslog-enabled no

# =============================================================================
# Memory Management
# =============================================================================
# Maximum memory usage (disabled for development)
# maxmemory 256mb

# Memory eviction policy when max memory is reached
maxmemory-policy allkeys-lru

# =============================================================================
# Append Only File (AOF) Configuration
# =============================================================================
# Enable AOF persistence (more durable than RDB)
appendonly yes

# AOF filename
appendfilename "appendonly.aof"

# AOF sync policy
# everysec: sync every second (good balance)
# always: sync every command (slower but most durable)
# no: let OS decide when to sync (faster but less durable)
appendfsync everysec

# =============================================================================
# Slow Log Configuration
# =============================================================================
# Log queries slower than this (in microseconds)
slowlog-log-slower-than 10000

# Maximum length of slow log
slowlog-max-len 128

# =============================================================================
# Client Configuration
# =============================================================================
# Maximum number of connected clients
maxclients 10000

# =============================================================================
# Advanced Configuration
# =============================================================================
# Enable keyspace notifications for expired events
# Useful for session cleanup and rate limiting
notify-keyspace-events Ex

# Hash table configuration for better memory usage
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List configuration
list-max-ziplist-size -2
list-compress-depth 0

# Set configuration
set-max-intset-entries 512

# Sorted set configuration
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# =============================================================================
# Security (Development Settings)
# =============================================================================
# Disable dangerous commands in development
# rename-command FLUSHDB ""
# rename-command FLUSHALL ""
# rename-command KEYS ""

# Enable all commands for development
# In production, consider restricting access to dangerous commands

# =============================================================================
# Development Specific Settings
# =============================================================================
# Disable latency monitoring for development
latency-monitor-threshold 0

# Enable debugging features
# debug-log-enabled yes

# =============================================================================
# Comments and Documentation
# =============================================================================
# This Redis configuration is designed for:
# 1. Development environment with Docker Compose
# 2. Session storage for web application
# 3. Rate limiting data storage
# 4. Real-time features with pub/sub
# 5. Caching for database queries
#
# For production deployment, consider:
# - Enabling authentication (requirepass)
# - Restricting bind to specific interfaces
# - Setting memory limits
# - Configuring replica sets for high availability
# - Enabling TLS encryption
# - Restricting dangerous commands